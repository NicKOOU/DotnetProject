@page
@model LibraryApp.Pages.MovieModel
@{
    ViewData["Title"] = "Movies";
}
<style>
    body {
        background-image: url("/images/library-background.jpg");
        background-repeat: no-repeat;
        background-size: cover;
        color: #fff;
    }

    table {
        background-color: rgba(255, 255, 255, 0.9);
    }

        table th {
            background-color: #333;
            color: black;
        }

        table td {
            background-color: #fff;
            color: black;
        }

    .footer {
        background-color: white;
        color: black;
    }

    .checked {
        color: gold;
    }

    .pages {
        margin-right: 20px;
    }

    .recommendation-section {
        margin: 1rem auto;
        padding: 1.5rem 2rem;
        position: relative;
        font-family: 'Source Sans Pro', sans-serif;
        font-size: 1.2rem;
        font-weight: 400;
        background: rgba(140, 168, 216, 0.9);
        color: white;
        width: 600px;
        text-align: center;
    }


    .book-details {
        text-align: center;
    }

    h2 {
        font-size: 20px;
        margin-bottom: 10px;
    }

    p {
        font-size: 16px;
        margin-bottom: 8px;
    }

    .description_overflow_handle {
        max-width: 200px;
        max-height: 50px;
        overflow: auto;
    }
</style>
<!-- A Menu bar to swap between 3 different pages -->
<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="btn btn-primary pages" href="Book">Books</a>
    </li>
    <li class="nav-item">
        <a class="btn btn-primary pages" href="ComicBook">ComicsBook</a>
    </li>
    <li class="nav-item">
        <a class="btn btn-primary pages" href="Movie">Movies</a>
    </li>
</ul>
<form method="get" class="form-inline">
    <div class="form-group">
        <input type="text" class="form-control" id="titleFilter" placeholder="Title" name="TitleFilter" value="@Model.TitleFilter">
    </div>

    <div class="form-group">
        <select class="form-control" id="genreFilter" name="GenreFilter">
            <option value="">All Types</option>
            <option value="Action" selected="@(Model.GenreFilter == "Action")">Action</option>
            <option value="Adventure" selected="@(Model.GenreFilter == "Adventure")">Adventure</option>
            <option value="Biography" selected="@(Model.GenreFilter == "Biography")">Biography</option>
            <option value="Classic" selected="@(Model.GenreFilter == "Classic")">Classic</option>
            <option value="Comic" selected="@(Model.GenreFilter == "Comic")">Comic</option>
            <option value="Crime" selected="@(Model.GenreFilter == "Crime")">Crime</option>
            <option value="Drama" selected="@(Model.GenreFilter == "Drama")">Drama</option>
            <option value="Fantasy" selected="@(Model.GenreFilter == "Fantasy")">Fantasy</option>
            <option value="Historical" selected="@(Model.GenreFilter == "Historical")">Historical</option>
            <option value="Horror" selected="@(Model.GenreFilter == "Horror")">Horror</option>
            <option value="Mystery" selected="@(Model.GenreFilter == "Mystery")">Mystery</option>
            <option value="Romance" selected="@(Model.GenreFilter == "Romance")">Romance</option>
            <option value="Sci-Fi" selected="@(Model.GenreFilter == "Sci-Fi")">Sci-Fi</option>
            <option value="Thriller" selected="@(Model.GenreFilter == "Thriller")">Thriller</option>
            <option value="Western" selected="@(Model.GenreFilter == "Western")">Western</option>
            <option value="Other" selected="@(Model.GenreFilter == "Wester")">Other</option>
        </select>
    </div>

    <div class="form-group">
        <input type="number" class="form-control" id="yearFilter" placeholder="Year" name="YearFilter" value="@Model.YearFilter">
    </div>

    <div class="btn-group" role="group" aria-label="Watch Filter">
        <input type="radio" id="watchFilterAll" name="WatchFilter" value="all" @(Model.WatchFilter == "all" ? "checked" : "")>
        <label for="watchFilterAll" style="margin-right: 10px;">All</label>
        <input type="radio" id="watchFilterWatched" name="WatchFilter" value="watch" @(Model.WatchFilter == "watch" ? "checked" : "")>
        <label for="watchFilterWatched" style="margin-right: 10px;">Watched</label>
        <input type="radio" id="watchFilterNotWatched" name="WatchFilter" value="not-watch" @(Model.WatchFilter == "not-watch" ? "checked" : "")>
        <label for="watchFilterNotWatched">Not Watched</label>
    </div>



    <div class="form-group">
        <select class="form-control" id="languageFilter" name="LanguageFilter">
            <option value="">All Languages</option>
            <option value="English" selected="@(Model.LanguageFilter == "English")">English</option>
            <option value="Romanian" selected="@(Model.LanguageFilter == "Romanian")">Romanian</option>
            <option value="French" selected="@(Model.LanguageFilter == "French")">French</option>
            <option value="German" selected="@(Model.LanguageFilter == "German")">German</option>
            <option value="Spanish" selected="@(Model.LanguageFilter == "Spanish")">Spanish</option>
            <option value="Italian" selected="@(Model.LanguageFilter == "Italian")">Italian</option>
            <option value="Russian" selected="@(Model.LanguageFilter == "Russian")">Russian</option>
            <option value="Chinese" selected="@(Model.LanguageFilter == "Chinese")">Chinese</option>
            <option value="Japanese" selected="@(Model.LanguageFilter == "Japanese")">Japanese</option>
            <option value="Korean" selected="@(Model.LanguageFilter == "Korean")">Korean</option>
            <option value="Arabic" selected="@(Model.LanguageFilter == "Arabic")">Arabic</option>
            <option value="Hindi" selected="@(Model.LanguageFilter == "Hindi")">Hindi</option>
            <option value="Turkish" selected="@(Model.LanguageFilter == "Turkish")">Turkish</option>
            <option value="Portuguese" selected="@(Model.LanguageFilter == "Portuguese")">Portuguese</option>
            <option value="Swedish" selected="@(Model.LanguageFilter == "Swedish")">Swedish</option>
            <option value="Dutch" selected="@(Model.LanguageFilter == "Dutch")">Dutch</option>
            <option value="Polish" selected="@(Model.LanguageFilter == "Polish")">Polish</option>
            <option value="Greek" selected="@(Model.LanguageFilter == "Greek")">Greek</option>
            <option value="Norwegian" selected="@(Model.LanguageFilter == "Norwegian")">Norwegian</option>
            <option value="Danish" selected="@(Model.LanguageFilter == "Danish")">Danish</option>
            <option value="Finnish" selected="@(Model.LanguageFilter == "Finnish")">Finnish</option>
            <option value="Hungarian" selected="@(Model.LanguageFilter == "Hungarian")">Hungarian</option>
            <option value="Czech" selected="@(Model.LanguageFilter == "Czech")">Czech</option>
            <option value="Bulgarian" selected="@(Model.LanguageFilter == "Bulgarian")">Bulgarian</option>
            <option value="Croatian" selected="@(Model.LanguageFilter == "Croatian")">Croatian</option>
            <option value="Ukrainian" selected="@(Model.LanguageFilter == "Ukrainian")">Ukrainian</option>
            <option value="Hebrew" selected="@(Model.LanguageFilter == "Hebrew")">Hebrew</option>
            <option value="Indonesian" selected="@(Model.LanguageFilter == "Indonesian")">Indonesian</option>
            <option value="Persian" selected="@(Model.LanguageFilter == "Persian")">Persian</option>
            <option value="Thai" selected="@(Model.LanguageFilter == "Thai")">Thai</option>
            <option value="Romanian" selected="@(Model.LanguageFilter == "Romanian")">Romanian</option>
            <option value="Other" selected="@(Model.LanguageFilter == "Other")">Other</option>

        </select>
    </div>

    <button type="submit" class="btn btn-primary">Filter</button>
    <a class="btn btn-secondary" style="margin: 10px;" href="Movie">Clear Filters</a>
</form>

<h1>Movies</h1>

<a class="btn btn-primary" href="CreateMovie">Add Movie</a>

<table class="table">
    <thead>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
        <tr>
            <th>Title</th>
            <th>Watched</th>
            <th>Link</th>
            <th>Year</th>
            <th>Language</th>
            <th>Genre</th>
            <th>Grade</th>
            <th>Duration</th>
            <th>Description</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var movie in Model.Movies)
        {
            <tr>
                <td>@movie.Title</td>
                <td>@(movie.IsWatched ? "Yes" : "No")</td>
                <td>
                    @if (!string.IsNullOrEmpty(movie.PosterUrl))
                    {
                        <a href="@movie.PosterUrl" target="_blank">
                            <img src="/images/link.png" alt="Movie Poster" style="max-height: 25px; max-width: 25px;" />
                        </a>
                    }
                </td>

                <td>@(movie.Year.HasValue ? movie.Year.ToString() : "")</td>
                <td>@movie.Language</td>
                <td>@movie.Genre</td>
                <td>
                    @if (movie.Grade.HasValue && movie.Grade == 0)
                    {
                        <a href="/EditMovie?id=@movie.Id" target="_blank">
                            <img src="/images/review.png" alt="Movie Poster" style="max-height: 25px; max-width: 25px;" />
                        </a>

                    }
                    @if (movie.Grade.HasValue && movie.Grade > 0)
                    {
                        <div class="rating">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <span class="fa fa-star@(i <= movie.Grade ? " checked" : "")"></span>
                            }
                        </div>

                    }

                </td>
                <td>@movie.Duration</td>



                <td>
                    @if (!string.IsNullOrEmpty(movie.Description))
                    {
                        <div class="description_overflow_handle">
                            @movie.Description
                        </div>


                    }
                </td>

                <td>
                    <a class="btn btn-primary" href="EditMovie?id=@movie.Id">Edit</a>
                </td>
                <td>
                    <form method="post" asp-page-handler="Delete" asp-route-id="@movie.Id">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
        <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js"></script>


    </tbody>
</table>
@if (Model.Movies.Count > 0)
{

    var random = new Random();
    var unreadMovies = Model.Movies.Where(movie => !movie.IsWatched).ToList();

    if (unreadMovies.Count > 0)
    {
        var recommendationIndex = random.Next(0, unreadMovies.Count);
        var recommendedMovie = unreadMovies[recommendationIndex];
        <div class="recommendation-section">
            <div class="book-details">
                <h2>You can read <em>@recommendedMovie.Title</em></h2>
                <p>@recommendedMovie.Genre movie, duration of @recommendedMovie.Duration in @recommendedMovie.Language</p>
            </div>
        </div>
    }


}